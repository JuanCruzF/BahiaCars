@page "/features"
@layout EmptyLayout
@attribute [Authorize]

<style>
    @@keyframes fadeIn {
        from {
            opacity: 0;
            transform: translateY(-10px);
        }

        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    @@keyframes slideUp {
        from {
            opacity: 0;
            transform: translateY(20px);
        }

        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    .animate-fadeIn {
        animation: fadeIn 0.6s ease-out forwards;
    }

    .animate-slideUp-1 {
        animation: slideUp 0.6s ease-out 0.1s forwards;
        opacity: 0;
    }

    .animate-slideUp-2 {
        animation: slideUp 0.6s ease-out 0.2s forwards;
        opacity: 0;
    }
</style>

<div class="min-h-screen bg-gray-950">
    <div class="max-w-4xl mx-auto px-4 py-6 sm:px-6 lg:px-8">
        <div class="flex items-center gap-4 mb-6 animate-fadeIn">
            <NavLink href="/"
                     class="flex items-center justify-center w-10 h-10 rounded-full bg-gray-900 border border-gray-800 hover:bg-gray-800 hover:border-gray-700 transition-all">
                <svg class="w-5 h-5 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"></path>
                </svg>
            </NavLink>
            <div>
                <h3 class="text-2xl sm:text-3xl font-bold text-white">Gestionar Equipamientos</h3>
                <p class="text-sm text-gray-400 mt-1">Administra las características disponibles para los vehículos</p>
            </div>
        </div>

        <div class="bg-gray-900 rounded-lg p-4 sm:p-6 mb-6 border border-gray-800 animate-slideUp-1">
            <h4 class="text-lg sm:text-xl font-semibold text-white mb-4 flex items-center gap-2">
                Agregar Nuevo Equipamiento
            </h4>
            <div class="flex flex-col gap-3">
                <div class="flex flex-col sm:flex-row gap-3">
                    <div class="flex-1">
                        <label class="block text-sm font-medium text-gray-300 mb-1.5">Nombre</label>
                        <InputText @bind-Value="newFeatureName"
                                   placeholder="Ej: Techo Solar, ABS, Airbags"
                                   class="w-full bg-gray-800 text-white border border-gray-700 rounded-lg px-4 py-2.5 focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all placeholder-gray-500" />
                    </div>
                    <div class="flex-1">
                        <label class="block text-sm font-medium text-gray-300 mb-1.5">Categoría</label>
                        <InputText @bind-Value="newFeatureCategory"
                                   placeholder="Ej: Confort, Seguridad"
                                   class="w-full bg-gray-800 text-white border border-gray-700 rounded-lg px-4 py-2.5 focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all placeholder-gray-500" />
                    </div>
                </div>
                <button @onclick="AddFeature"
                        class="w-full sm:w-auto bg-blue-600 hover:bg-blue-700 text-white font-semibold py-3 px-6 rounded-lg transition-all shadow-lg hover:shadow-xl flex items-center justify-center gap-2">
                    <span>Agregar Equipamiento</span>
                </button>
            </div>
        </div>

        <div class="bg-gray-900 rounded-lg p-4 sm:p-6 border border-gray-800 animate-slideUp-2">
            <h4 class="text-lg sm:text-xl font-semibold text-white mb-4 flex items-center gap-2">
                Equipamientos Registrados
            </h4>
            @if (features == null)
            {
                <div class="flex items-center justify-center py-12">
                    <div class="animate-spin rounded-full h-10 w-10 border-b-2 border-blue-500"></div>
                    <p class="ml-3 text-gray-400 text-lg">Cargando equipamientos...</p>
                </div>
            }
            else if (!features.Any())
            {
                <div class="text-center py-12">
                    <p class="text-gray-400 text-lg">No hay equipamientos registrados</p>
                    <p class="text-gray-500 text-sm mt-2">Agrega el primer equipamiento usando el formulario de arriba</p>
                </div>
            }
            else
            {
                <div class="space-y-2">
                    @foreach (var feature in features)
                    {
                        <div class="flex flex-col sm:flex-row sm:items-center justify-between p-4 bg-gray-800 rounded-lg border border-gray-700 hover:border-gray-600 transition-all gap-3">
                            <div class="flex-1">
                                <div class="flex flex-col sm:flex-row sm:items-center gap-2">
                                    <span class="font-semibold text-white text-base">@feature.Name</span>
                                    <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-blue-900/30 text-blue-400 border border-blue-800 w-fit">
                                        @feature.Category
                                    </span>
                                </div>
                            </div>
                            <button @onclick="() => DeleteFeature(feature.Id)"
                                    class="flex items-center justify-center gap-2 px-4 py-2 bg-red-900/20 hover:bg-red-900/40 text-red-400 hover:text-red-300 rounded-lg transition-all border border-red-900/50 hover:border-red-800 font-medium text-sm w-full sm:w-auto">
                                <span>Eliminar</span>
                            </button>
                        </div>
                    }
                </div>
                <div class="mt-4 pt-4 border-t border-gray-800">
                    <p class="text-sm text-gray-400 text-center">
                        Total: <span class="font-semibold text-white">@features.Count()</span> equipamiento@(features.Count() != 1 ? "s" : "")
                    </p>
                </div>
            }
        </div>
    </div>
</div>

@code {
    [Inject] private HttpClient Http { get; set; } = default!;

    private string? errorMessage;
    private List<FeatureResponse>? features;
    private string newFeatureName = "";
    private string newFeatureCategory = "";

    protected override async Task OnInitializedAsync()
    {
        await LoadFeatures();
    }
    private async Task LoadFeatures()
    {
        errorMessage = null; // Limpiamos errores previos
        try
        {
            features = await Http.GetFromJsonAsync<List<FeatureResponse>>("api/features");
        }
        catch (Exception ex)
        {
            errorMessage = "Error al cargar los equipamientos. Revisa la conexión con el backend.";
            Console.WriteLine($"Error en LoadFeatures: {ex.Message}");
            features = new List<FeatureResponse>(); // Asigna una lista vacía para evitar errores
        }
    }

    private async Task AddFeature()
    {
        if (string.IsNullOrWhiteSpace(newFeatureName)) return;

        var dto = new { Name = newFeatureName, Category = newFeatureCategory };
        var response = await Http.PostAsJsonAsync("api/features", dto);
        if (response.IsSuccessStatusCode)
        {
            newFeatureName = "";
            newFeatureCategory = "";
            await LoadFeatures();
        }
    }

    private async Task DeleteFeature(Guid id)
    {
        var response = await Http.DeleteAsync($"api/features/{id}");
        if (response.IsSuccessStatusCode)
        {
            await LoadFeatures();
        }
    }
}