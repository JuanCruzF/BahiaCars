@page "/login"
@layout EmptyLayout
@using System.Net.Http.Json
@using Microsoft.JSInterop
@using Admin.Frontend.Services
@using Admin.Frontend.Dtos
@inject HttpClient Http
@inject NavigationManager Navigation
@inject IJSRuntime JSRuntime
@inject AuthenticationStateProvider AuthStateProvider

<style>
    @@keyframes fadeInUp {
        from {
            opacity: 0;
            transform: translateY(30px);
        }

        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    @@keyframes shake {
        0%, 100% {
            transform: translateX(0);
        }

        10%, 30%, 50%, 70%, 90% {
            transform: translateX(-5px);
        }

        20%, 40%, 60%, 80% {
            transform: translateX(5px);
        }
    }

    .animate-fade-in-up {
        animation: fadeInUp 0.6s ease-out;
    }

    .animate-shake {
        animation: shake 0.5s ease-in-out;
    }
</style>

<div class="min-h-screen bg-gradient-to-br from-gray-950 via-gray-900 to-gray-950 flex items-center justify-center px-4 py-8">
    <!-- Elementos decorativos de fondo -->
    <div class="absolute inset-0 overflow-hidden pointer-events-none">
        <div class="absolute top-1/4 left-1/4 w-96 h-96 bg-blue-500/10 rounded-full blur-3xl"></div>
        <div class="absolute bottom-1/4 right-1/4 w-96 h-96 bg-purple-500/10 rounded-full blur-3xl"></div>
    </div>

    <div class="relative w-full max-w-md animate-fade-in-up">
        <!-- Card principal -->
        <div class="bg-gray-900/80 backdrop-blur-xl rounded-2xl shadow-2xl border border-gray-800 overflow-hidden">
            <!-- Header -->
            <div class="bg-gradient-to-r from-blue-600 to-purple-600 p-8 text-center">
                <h3 class="text-3xl font-bold text-white mb-2">BahiaCars Admin</h3>
                <p class="text-blue-100 text-sm">Panel de Administración</p>
            </div>

            <!-- Formulario -->
            <div class="p-8 space-y-6">
                <!-- Usuario -->
                <div class="space-y-2">
                    <label for="username" class="block text-sm font-medium text-gray-300">
                        Usuario
                    </label>
                    <div class="relative">
                        <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                            <svg class="h-5 w-5 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z" />
                            </svg>
                        </div>
                        <input id="username"
                               @bind="username"
                               placeholder="Ingresa tu usuario"
                               autocomplete="username"
                               class="w-full pl-10 pr-4 py-3 text-white bg-gray-800 border border-gray-700 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all placeholder-gray-500" />
                    </div>
                </div>

                <!-- Contraseña -->
                <div class="space-y-2">
                    <label for="password" class="block text-sm font-medium text-gray-300">
                        Contraseña
                    </label>
                    <div class="relative">
                        <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                            <svg class="h-5 w-5 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z" />
                            </svg>
                        </div>
                        <input id="password"
                               @bind="password"
                               type="password"
                               placeholder="Ingresa tu contraseña"
                               autocomplete="current-password"
                               @onkeypress="HandleKeyPress"
                               class="w-full pl-10 pr-4 py-3 text-white bg-gray-800 border border-gray-700 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all placeholder-gray-500" />
                    </div>
                </div>

                <!-- Mensaje de error -->
                @if (!string.IsNullOrEmpty(errorMessage))
                {
                    <div class="bg-red-900/20 border border-red-500 text-red-400 px-4 py-3 rounded-lg flex items-start gap-3 animate-shake">
                        <svg class="w-5 h-5 flex-shrink-0 mt-0.5" fill="currentColor" viewBox="0 0 20 20">
                            <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z" clip-rule="evenodd"></path>
                        </svg>
                        <p class="text-sm">@errorMessage</p>
                    </div>
                }

                <!-- Botón de login -->
                <button @onclick="HandleLogin"
                        disabled="@isLoading"
                        class="w-full flex justify-center items-center gap-3 py-3.5 px-4 font-semibold text-white bg-gradient-to-r from-blue-600 to-blue-700 hover:from-blue-700 hover:to-blue-800 rounded-lg transition-all duration-200 shadow-lg hover:shadow-xl hover:shadow-blue-500/20 disabled:from-gray-700 disabled:to-gray-800 disabled:cursor-not-allowed disabled:shadow-none hover:scale-[1.02] active:scale-[0.98]">
                    @if (isLoading)
                    {
                        <svg class="animate-spin h-5 w-5 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                            <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
                            <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                        </svg>
                        <span>Ingresando...</span>
                    }
                    else
                    {
                        <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 16l-4-4m0 0l4-4m-4 4h14m-5 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h7a3 3 0 013 3v1"></path>
                        </svg>
                        <span>Iniciar Sesión</span>
                    }
                </button>

                <!-- Info adicional (opcional) -->
                <div class="pt-4 border-t border-gray-800">
                    <p class="text-center text-xs text-gray-500">
                        Sistema seguro • Acceso restringido
                    </p>
                </div>
            </div>
        </div>

        <!-- Footer -->
        <div class="mt-6 text-center">
            <p class="text-sm text-gray-500">
                © 2025 BahiaCars. Todos los derechos reservados.
            </p>
        </div>
    </div>
</div>

@code {
    private string username = "";
    private string password = "";
    private string? errorMessage;
    private bool isLoading = false;

    private async Task HandleKeyPress(KeyboardEventArgs e)
    {
        if (e.Key == "Enter" && !isLoading)
        {
            await HandleLogin();
        }
    }

    private async Task HandleLogin()
    {
        isLoading = true;
        errorMessage = null;
        var loginRequest = new { Username = username, Password = password };

        try
        {
            var response = await Http.PostAsJsonAsync("api/auth/login", loginRequest);

            if (response.IsSuccessStatusCode)
            {
                var loginResult = await response.Content.ReadFromJsonAsync<LoginResponse>();
                if (loginResult?.Token != null)
                {
                    await JSRuntime.InvokeVoidAsync("localStorage.setItem", "authToken", loginResult.Token);
                    ((CustomAuthStateProvider)AuthStateProvider).NotifyUserAuthentication(loginResult.Token);
                    Navigation.NavigateTo("/");
                }
            }
            else
            {
                errorMessage = "Usuario o contraseña incorrectos.";
            }
        }
        catch (Exception)
        {
            errorMessage = "No se pudo conectar con el servidor.";
        }
        finally
        {
            isLoading = false;
            StateHasChanged();
        }
    }
}